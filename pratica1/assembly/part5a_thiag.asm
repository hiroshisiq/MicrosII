; 			HEADER					;
;			LCD 4 BITS MODE				;
	DB0	EQU	P1.0
	DB1	EQU	P1.1
	DB2	EQU	P1.2
	DB3	EQU	P1.3
	DB4	EQU	P1.4
	DB5	EQU	P1.5
	DB6	EQU	P1.6
	DB7	EQU	P1.7
	BUS	EQU	P0
	ENAB	EQU	P0.2
	RW	EQU	P0.1
	RS	EQU	P0.0

; RS 0/1	Instruction/Data
; RW 0/1	Write/Read
; ENAB 1->0	Instruction/Data acquire	
	MOV 	TMOD, #00000001B		; MODE 1 FOR TIMER 0: 16 BITS COUNTER

	LCALL 	DELAY_30
	LCALL 	INIT
	LCALL	CLEAR

	MOV 	A, #06H
	LCALL	POS
	MOV	A, #'M'
	LCALL 	WRITE
	MOV	A, #'O'
	LCALL 	WRITE
	MOV	A, #'D'
	LCALL 	WRITE
	MOV	A, #'O'
	LCALL 	WRITE
	MOV	A, #44H
	LCALL 	POS
	MOV	A, #'4'
	LCALL 	WRITE
	MOV	A, #20H
	LCALL 	WRITE
	MOV	A, #'B'
	LCALL 	WRITE
	MOV	A, #'I'
	LCALL 	WRITE
	MOV	A, #'T'
	LCALL 	WRITE
	MOV	A, #'S'

	SJMP 	$




CONV:	MOV 	R6, A
	ANL	A, #0F0H
	ANL	BUS, #0FH
	ORL	A, BUS
	MOV	BUS, A
	MOV	A, R6
	RET

SEND:	SETB 	ENAB
	LCALL	CONV
	CLR	ENAB
	LCALL	WAIT
	RET
	
WRITE:	CLR	RW
	SETB 	ENAB
	SETB 	RS
	
	LCALL	SEND
	SWAP	A
	LCALL	SEND
	
	RET

CLEAR:	CLR	RW
	SETB 	ENAB
	CLR 	RS

	MOV 	A, #01H
	LCALL 	SEND
	SWAP 	A
	LCALL	SEND
	RET
	
POS:	CLR	RW
	SETB 	ENAB
	CLR 	RS
	ADD 	A, #80H
	LCALL 	SEND
	SWAP 	A
	LCALL 	SEND
	RET
	
INIT:	CLR	RW
	SETB 	ENAB
	CLR 	RS

	MOV	A, #28H
	LCALL 	SEND
	SWAP 	A
	LCALL 	SEND
	
	SETB 	ENAB
	CLR 	RS
	MOV	A, #0EH
	LCALL	SEND
	SWAP 	A
	LCALL 	SEND

	CLR 	RS
	MOV	A, #06H
	LCALL	SEND
	SWAP 	A
	LCALL	SEND
	RET

WAIT:	SJMP DELAY
;
;DELAY:	MOV 	R2, #10D		; 2.53MS DELAY
;DELAY2:	MOV	R1, #10D			;
;DELAY1:	MOV 	R0, #10D			;((((R0*2)+3)*R1+3)*R2+3)*12/(f)
;	DJNZ	R0, $
;	DJNZ	R1, DELAY1
;	DJNZ 	R2, DELAY2
;			
;	RET
DELAY:	MOV	TH0, #6CH		; this is for the number of cycles for th1 interrupt
	MOV	TL0, #00H
	SETB	TR0
	JNB	TF0, $
	CLR	TF0
	CLR 	TR0
	RET

DELAY_30:	MOV	R5, #08H
LOOP_30:	LCALL 	WAIT
		DJNZ	R5, LOOP_30
	END
